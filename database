


1.SQLiteDatabase对象的使用
  1.1 执行操作前db.beginTransaction();
      执行操作后db.setTransactionSuccessful();db.close();
  1.2 增加
    3.2.1 db.execSQL("insert into " + OrderDBHelper.TABLE_NAME + " (Id, CustomName, OrderPrice, Country) values (1, 'Arc', 100, 'China')");
    3.2.2 ContentValues contentValues = new ContentValues();
          contentValues.put("Id", 7);
          contentValues.put("CustomName", "Jne");
          contentValues.put("OrderPrice", 700);
          contentValues.put("Country", "China");
          db.insertOrThrow(OrderDBHelper.TABLE_NAME, null, contentValues);
  1.3 删除
      db.delete(OrderDBHelper.TABLE_NAME, "Id = ?", new String[]{String.valueOf(7)});
  1.4 修改
      ContentValues cv = new ContentValues();
      cv.put("OrderPrice", 800);
      db.update(OrderDBHelper.TABLE_NAME, cv, "Id = ?", new String[]{String.valueOf(6)});
  1.5 查找
      3.5.1 public Cursor rawQuery(String sql, String[] selectionArgs)
      3.5.2 public Cursor query(String table,String[] columns,String selection,String[] selectionArgs,String groupBy,String having,String orderBy,String limit);
            groupBy:分组列
            having:分组条件
            orderBy:排序列
            limit:分页查询限制
            
2.SQLiteDatabase对象可以通过SQLiteOpenHelper对象获得。
  通过SQLiteOpenHelper子类的对象，获得SQLiteDatabase对象。
  SQLiteDatabase database = dataBaseHelper.getReadableDatabase();
  
3.创建一个继承SQLiteOpenHelper的类，并重写onCreate()和onUpgrade()方法。
  3.1 SQLiteOpenHelper没有无参构造方法。
      构造方法中指定db名和db版本号。
      构造方法单例:
      public static DataBaseHelper getInstance(Context context) {
        if (dataBaseHelper == null) {
            synchronized (DataBaseHelper.class) {
                if (dataBaseHelper == null)
                    dataBaseHelper = new DataBaseHelper(context);
            }
        }
        return dataBaseHelper;
      }
  3.2 onCreate()和onUpgrade()方法为abstract方法，须重写。
  
4.其他
  4.1 另一种获得SQLiteDatabase对象的方式
      SQLiteDatabase db = SQLiteDatabase.openOrCreateDatabase(path, null);
      SQLiteOpenHelper的getReadableDatabase()方法内会调用openOrCreateDatabase()方法。
  4.2 直接使用SqliteDatabase的execSQL(String sql)有可能会导致注入攻击，比如
      delete from user where name='a';
      有可能就变成
      delete from user where name='a' or 1=1;












